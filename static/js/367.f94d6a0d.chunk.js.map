{"version":3,"file":"static/js/367.f94d6a0d.chunk.js","mappings":"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","sources":["redux/contacts/contacts-selectors.js","redux/filter/filter-selectors.js","components/Phonebook/Form-elements/initialState.js","webpack://goit-react-hw-08-phonebook/./src/components/Phonebook/Phonebook.module.css?3a02","components/Phonebook/Form-elements/ContactForm.jsx","components/Phonebook/Filter.jsx","components/Phonebook/Form-elements/ContactListItem.jsx","components/Phonebook/Form-elements/ContactList.jsx","pages/Contacts.jsx","../node_modules/nanoid/index.browser.js"],"sourcesContent":["export const getContacts = ({ contacts }) => contacts.items;\n\nexport const getState = ({ contacts }) => ({\n  loading: contacts.loading,\n  error: contacts.error,\n});\n\nexport const getFilterContacts = (contacts, filter) => {\n  if (!filter) {\n    return contacts;\n  }\n  const normalizedFilter = filter.toLowerCase();\n  const result = contacts.filter(({ name, number }) => {\n    const normalizedName = name.toLowerCase();\n    const normalizedNumber = number.toLowerCase();\n    return (\n      normalizedName.includes(normalizedFilter) ||\n      normalizedNumber.includes(normalizedFilter)\n    );\n  });\n  return result;\n};\n","export const getFilter = ({ filter }) => filter;\n","const initialState = {\n  name: '',\n  number: '',\n};\nexport default initialState;\n","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"Phonebook_container__u4h5I\",\"wrap\":\"Phonebook_wrap__GhmmZ\",\"title\":\"Phonebook_title__ipARL\",\"form\":\"Phonebook_form__J23fu\",\"label\":\"Phonebook_label__Qzztg\",\"input\":\"Phonebook_input__8yiEQ\",\"filter\":\"Phonebook_filter__X-pBt\",\"list\":\"Phonebook_list__S1mT+\",\"item\":\"Phonebook_item__HtWTq\",\"btn\":\"Phonebook_btn__Ig2lg\"};","import { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport initialState from './initialState';\nimport s from '../Phonebook.module.css';\n\nexport default function ContactForm({ onSubmit }) {\n  const [state, setState] = useState({ ...initialState });\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    setState({\n      ...state,\n      [name]: value,\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    onSubmit({ ...state });\n    setState({ ...initialState });\n  };\n\n  const { name, number } = state;\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label className={s.label}>\n        <input\n          className={s.input}\n          value={name}\n          onChange={handleChange}\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Name\"\n        />\n      </label>\n      <label className={s.label}>\n        <input\n          className={s.input}\n          value={number}\n          onChange={handleChange}\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          placeholder=\"Pnone number\"\n        />\n      </label>\n      <button className={s.btn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nContactForm.defaultProps = {\n  onSubmit: () => {},\n};\n\nContactForm.propTypes = {\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport s from '../Phonebook/Phonebook.module.css';\n\nexport default function Filter({ value, onChange }) {\n  return (\n    <input\n      className={s.filter}\n      value={value}\n      onChange={onChange}\n      type=\"text\"\n      name=\"filter\"\n      placeholder=\"Search\"\n    />\n  );\n}\n\nFilter.propTypes = {\n  value: PropTypes.string,\n  onChange: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\nimport s from '../Phonebook.module.css';\n\nexport default function ContactListItem({ name, number, removeContact, id }) {\n  return (\n    <>\n      <li className={s.item}>\n        {`${name} : ${number}`}\n\n        <button className={s.btn} onClick={() => removeContact(id)}>\n          Delete\n        </button>\n      </li>\n    </>\n  );\n}\n\nContactListItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n  removeContact: PropTypes.func,\n  id: PropTypes.string,\n};\n","import PropTypes from 'prop-types';\nimport { nanoid } from 'nanoid';\nimport s from '../Phonebook.module.css';\nimport ConactListItem from './ContactListItem';\n\nexport default function ContactList({ contacts, removeContact }) {\n  return (\n    <>\n      <ul className={s.list}>\n        {contacts?.map(contact => (\n          <ConactListItem\n            key={nanoid()}\n            id={contact.id}\n            name={contact.name}\n            number={contact.number}\n            removeContact={removeContact}\n          />\n        ))}\n      </ul>\n    </>\n  );\n}\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n      removeContact: PropTypes.func,\n      id: PropTypes.string,\n    })\n  ),\n  onDeleteContact: PropTypes.func,\n};\n","import { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport {\n  fetchContacts,\n  addContactFromApi,\n  removeContactFromApi,\n} from 'redux/contacts/contacts-operations';\n\nimport { setFilter } from 'redux/filter/filter-actions';\nimport {\n  getContacts,\n  getFilterContacts,\n  getState,\n} from '../redux/contacts/contacts-selectors';\n\nimport { getFilter } from 'redux/filter/filter-selectors';\n\nimport ContactForm from '../components/Phonebook/Form-elements/ContactForm';\nimport Filter from '../components/Phonebook/Filter';\nimport ContactList from '../components/Phonebook/Form-elements/ContactList';\n\nimport s from '../components/Phonebook/Phonebook.module.css';\n\nexport default function Contacts() {\n  const contacts = useSelector(getContacts);\n  const { loading } = useSelector(getState); //must be 'error' in const { loading, error }\n\n  const filter = useSelector(getFilter);\n  const filtredContacts = getFilterContacts(contacts, filter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const addContact = data => {\n    dispatch(addContactFromApi(data));\n  };\n\n  const removeContact = id => {\n    dispatch(removeContactFromApi(id));\n  };\n\n  const handleFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <div className={s.container}>\n      <div className={s.wrap}>\n        <h1 className={s.title}>My phonebook</h1>\n        <ContactForm onSubmit={addContact} contacts={contacts} />\n\n        <h2 className={s.title}>Contacts</h2>\n        <Filter value={filter} onChange={handleFilter} />\n        {!loading && contacts?.length > 0 && (\n          <ContactList\n            contacts={filtredContacts}\n            removeContact={removeContact}\n          />\n        )}\n        {loading && <p>...Loading</p>}\n      </div>\n    </div>\n  );\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n"],"names":["getContacts","contacts","items","getState","loading","error","getFilter","filter","name","number","ContactForm","onSubmit","useState","initialState","state","setState","handleChange","e","currentTarget","value","className","s","preventDefault","onChange","type","pattern","title","required","placeholder","Filter","defaultProps","ContactListItem","removeContact","id","onClick","ContactList","map","contact","nanoid","Contacts","useSelector","filtredContacts","normalizedFilter","toLowerCase","normalizedName","normalizedNumber","includes","getFilterContacts","dispatch","useDispatch","useEffect","fetchContacts","data","addContactFromApi","target","setFilter","length","removeContactFromApi","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase"],"sourceRoot":""}